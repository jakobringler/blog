<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://fxnotes.xyz/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fxnotes.xyz/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://fxnotes.xyz/notes/About/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/About/</guid><description>Hi there!
Im currently working as an FX TD and created this page to document and share workflows, ideas and notes about houdini and various other vfx topics as well as my recent deep learning adventures.</description></item><item><title>Abusing Heightfields as Fast Image Canvas</title><link>https://fxnotes.xyz/notes/Abusing-Heightfields-as-Fast-Image-Canvas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Abusing-Heightfields-as-Fast-Image-Canvas/</guid><description>The Problem A big part of getting a machine learning model to run is to prepare and import the data in the right shape.</description></item><item><title>cat Files</title><link>https://fxnotes.xyz/notes/cat-Files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/cat-Files/</guid><description>.cat Files enable the user to deploy pretrained pytorch models directly into Nuke</description></item><item><title>Digit Recognition in Houdini</title><link>https://fxnotes.xyz/notes/Digit-Recognition-in-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Digit-Recognition-in-Houdini/</guid><description>![[notes/images/digitRec_Banner.gif]]
the files can be found here: GitHub - Houdini + PyTorch Digit Recognition
sources / further reading: PyTorch Tutorial 13 - Feed-Forward Neural Network 4 pixel cam AI - Machine Learning in Houdini Tutorial</description></item><item><title>FLIP</title><link>https://fxnotes.xyz/notes/FLIP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/FLIP/</guid><description>General Particle Velocity vs Volume Velocity It&amp;rsquo;s hard to have exact art directible control over the FLIP particles when working with volume velocities.</description></item><item><title>General Workflow Tips</title><link>https://fxnotes.xyz/notes/General-Workflow-Tips/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/General-Workflow-Tips/</guid><description>Temporary Attributes When creating HDAs or working on bigger setups it might make sense to prefix any temporary attributes with a special character such as __ to make removing it later on easier e.</description></item><item><title>HDA Parameters</title><link>https://fxnotes.xyz/notes/HDA-Parameters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/HDA-Parameters/</guid><description>Hiding or Disabling Parameters each parameter has a &amp;lsquo;Disable When&amp;rsquo; &amp;amp; &amp;lsquo;Hide When&amp;rsquo; option where specific rules can be specified.</description></item><item><title>Houdini</title><link>https://fxnotes.xyz/notes/Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Houdini/</guid><description>VEX [[notes/VEX Snippets |VEX Snippets]] [[notes/UsefulMathNumbers |Useful Math &amp;amp; Numbers]] [[notes/WaveExpressions |Wave Expressions]] [[notes/Vector Shenanigans |Vector Shenanigans]] [[notes/Quaternion-Euler-Rotations |Quaternion &amp;amp; Euler Rotations]] [[notes/Matrix Operations |Matrix Operations]] [[notes/primuv and xyzdist |primuv &amp;amp; xyzdist]] [[notes/IrregularGridAlgorithms |Algorithms for Irregular Grids]] HDAs [[notes/HDA Parameters |Parameters]] FX [[notes/General Workflow Tips |General Workflow Tips]] [[notes/FLIP |FLIP]] [[notes/VELLUM |VELLUM]] Python [[notes/Scripting in Houdini |Scripting in Houdini - Talk Notes]] [[notes/VDBs and Voxels |VDBs and Voxels]] Machine Learning [[notes/ML Castles |ML Castles]] [[notes/Tower Sketcher |Training a Neural Net to Understand my Drawings]] [[notes/Vegetation Erosion Prediction |Vegetation and Erosion Prediction on Heightfields using GANs]] [[notes/Setting up Anaconda and Houdini for 3D Deep Learning on Linux |Setting up Anaconda and Houdini for 3D Deep Learning on Linux]] [[notes/Abusing Heightfields as Fast Image Canvas |Abusing Heightfields as Fast Image Canvas]] Misc [[notes/Op Operators |Op Operators]]</description></item><item><title>HoudiniToTaichi</title><link>https://fxnotes.xyz/notes/HoudiniToTaichi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/HoudiniToTaichi/</guid><description>https://github.com/taichi-dev/taichi_houdini</description></item><item><title>Julia Wrangle in Houdini</title><link>https://fxnotes.xyz/notes/Julia-Wrangle-in-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Julia-Wrangle-in-Houdini/</guid><description>https://github.com/pedohorse/yuria</description></item><item><title>Legal / Impressum</title><link>https://fxnotes.xyz/notes/Legal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Legal/</guid><description>Angaben gem. § 5 TMG:
Ringler, Jakob
Kontaktaufnahme:
E-Mail: fxnotes@proton.me
Haftungsausschluss – Disclaimer:
Haftung für Inhalte
Alle Inhalte unseres Internetauftritts wurden mit größter Sorgfalt und nach bestem Gewissen erstellt.</description></item><item><title>Machine Learning</title><link>https://fxnotes.xyz/notes/Machine-Learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Machine-Learning/</guid><description>Houdini Projects &amp;amp; Examples [[notes/Digit Recognition in Houdini |Digit Recognition in Houdini]] [[notes/Tower Sketcher |Tower Sketcher]] [[notes/Vegetation Erosion Prediction |Vegetation &amp;amp; Erosion Prediction]] Setup Guides [[notes/Setting up Anaconda and Houdini for 3D Deep Learning on Linux |Setting up Anaconda and Houdini for 3D Deep Learning on Linux]] Houdini DL &amp;ldquo;Hacks&amp;rdquo; [[notes/Abusing Heightfields as Fast Image Canvas |Abusing Heightfields as Fast Image Canvas]] Nuke [[notes/cat Files |cat Files]] Coming Soon ML Basics for Technical 3D Artists / TDs Concepts [[notes/Neural Networks |Neural Networks]] [[notes/Tensors |Tensors]] [[notes/Gradient Descent |Gradient Descent]] [[notes/Back Propagation |Back Propagation]] Model Archtiectures [[notes/Feed Forward Networks (FFNs) |Feed Forward Networks (FFNs)]] [[notes/Convolutional Neural Networks (CNNs) |Convolutional Neural Networks (CNNs)]] [[notes/Generative Adversarial Networks (GANs) |Generative Adversarial Networks (GANs)]] [[notes/Recurrent Neural Networks (RNNs) |Recurrent Neural Networks (RNNs)]] [[notes/Autoencoders |Autoencoders]] [[notes/Neural Radiance Fields |Neural Radiance Fields (NeRFs)]] Data Data Synthesis Data Augmentation Noise</description></item><item><title>Matrix Operations</title><link>https://fxnotes.xyz/notes/Matrix-Operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Matrix-Operations/</guid><description>Basics Dimensions Houdini most commonly uses 3x3 or 4x4 matrices to store transformation data
3x3 -&amp;gt; rotation and scale 4x4 -&amp;gt; rotation, scale and translation</description></item><item><title>NVIDIAs Warp for Houdini</title><link>https://fxnotes.xyz/notes/NVIDIAs-Warp-for-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/NVIDIAs-Warp-for-Houdini/</guid><description>&amp;ldquo;NVIDIA Warp is a Python framework that gives coders an easy way to write GPU-accelerated, kernel-based programs in NVIDIA Omniverse™ and OmniGraph.</description></item><item><title>Op Operators</title><link>https://fxnotes.xyz/notes/Op-Operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Op-Operators/</guid><description>Summary &amp;ldquo; Op Operators I will Never Memorize&amp;rdquo; is a fantastic blog post by Mohamad Salame that summarizes all the obscurities and pitfalls you will face when having to deal with the op syntax.</description></item><item><title>Other</title><link>https://fxnotes.xyz/notes/Other/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Other/</guid><description>Nuke [[notes/cat Files |cat Files]]</description></item><item><title>primuv and xyzdist</title><link>https://fxnotes.xyz/notes/primuv-and-xyzdist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/primuv-and-xyzdist/</guid><description>sources / further reading The joy of xyzdist() and primuv() - Toadstorm Joy Of Vex 19 - cgwiki 1 Minute VEX II - Aaron Smith</description></item><item><title>Projects / R&amp;D</title><link>https://fxnotes.xyz/notes/Projects-and-RnD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Projects-and-RnD/</guid><description>Projects [[notes/ML Castles |ML Castles]] [[notes/Tower Sketcher |Tower Sketcher]] [[notes/Vegetation Erosion Prediction |Vegetation Erosion Prediction]] R&amp;amp;D Deep Learning [[notes/Digit Recognition in Houdini |Digit Recognition in Houdini]]</description></item><item><title>Quaternion &amp; Euler Rotations</title><link>https://fxnotes.xyz/notes/Quaternion-Euler-Rotations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Quaternion-Euler-Rotations/</guid><description>Quaternions expressed as 4 numbers vector4 = [x, y, z, w]
It&amp;rsquo;s usually used to define rotational transformation in 3D Space.</description></item><item><title>Resources</title><link>https://fxnotes.xyz/notes/Resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Resources/</guid><description>Downloads &amp;amp; Scripts [[notes/VEX Snippets |VEX Snippets]]
Links CG &amp;amp; VFX Houdini Tutorials Entagma - Moritz Schwind &amp;amp; Manuel Casasola Merkle procedural &amp;amp; motion design VEX for Algorithmic Design - Junichiro Horikawa VEX, procedural design Blogs &amp;amp; Wikis cgwiki - Matt Estela all things houdini procegen - Konstantin Magnus procedural workflows, automation wiki - John Kunz VEX, resources Toadstorm Nerdblog - Henry Foster MOPs, procedural workflows &amp;amp; python Houdini Gubbins technical, VEX, math, geometry, algorithms FX Thinking - Alessandro Pepe FX, technical Website / Wiki - Deborah R.</description></item><item><title>Scripting in Houdini - Talk Notes</title><link>https://fxnotes.xyz/notes/Scripting-in-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Scripting-in-Houdini/</guid><description>These are my personal notes about Paul Ambrosiussen&amp;rsquo;s Talk Python Scripting - Houdini.
Writing Code use an external editor for anything longer than a couple of lines</description></item><item><title>Setting up Anaconda and Houdini for 3D Deep Learning on Linux</title><link>https://fxnotes.xyz/notes/Setting-up-Anaconda-and-Houdini-for-3D-Deep-Learning-on-Linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Setting-up-Anaconda-and-Houdini-for-3D-Deep-Learning-on-Linux/</guid><description>Installation To get started install Anaconda and run the following commands in your terminal:
( hou is the name of the new enviroment and python 3.</description></item><item><title>Useful Math Functions &amp; Numbers</title><link>https://fxnotes.xyz/notes/UsefulMathNumbers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/UsefulMathNumbers/</guid><description>Functions [[notes/WaveExpressions |Wave Expressions]] Golden Ratio Ratio between two numbers that equals approximately: 1.618
$\frac{a+b}{a}=\frac{a}{b}$
Golden Angle $\phi= 137.</description></item><item><title>VELLUM</title><link>https://fxnotes.xyz/notes/VELLUM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/VELLUM/</guid><description>Cloth Stiff &amp;amp; Crumply (Paper, Metal, etc.) Key Parameters:
Constraint Iterations (higher = stiffer) Plasticity (prevents unfolding) High Bend Stiffness Disable Compression Stiffness Enable Stiffness Dropoff (Decreasing) Additional Tricks:</description></item><item><title>VEX Snippets</title><link>https://fxnotes.xyz/notes/VEX-Snippets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/VEX-Snippets/</guid><description>Wrangle Cheat Sheet I try my best to credit and link to any sources. That being said, some of those are pretty old and I have no idea where they came from.</description></item><item><title>Wave Expressions</title><link>https://fxnotes.xyz/notes/WaveExpressions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/WaveExpressions/</guid><description>Useful Periodic Functions I recently stumbled across this phenomenal summary of wave expressions by Cameron Carson. Check it out! He wrote everything for Nuke so I decided to build a similar little library for VEX and adjust the necessary syntax / functions.</description></item></channel></rss>