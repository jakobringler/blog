<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on</title><link>https://fxnotes.xyz/tags/python/</link><description>Recent content in python on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fxnotes.xyz/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Abusing Heightfields as Fast Image Canvas</title><link>https://fxnotes.xyz/notes/Abusing-Heightfields-as-Fast-Image-Canvas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Abusing-Heightfields-as-Fast-Image-Canvas/</guid><description>The Problem: A big part of getting a machine learning model to run is to prepare and import the data in the right shape.</description></item><item><title>Digit Recognition in Houdini</title><link>https://fxnotes.xyz/notes/Digit-Recognition-in-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fxnotes.xyz/notes/Digit-Recognition-in-Houdini/</guid><description>![[notes/images/digitRec_Banner.gif]]
the files can be found here: GitHub - Houdini + PyTorch Digit Recognition
sources / further reading:
PyTorch Tutorial 13 - Feed-Forward Neural Network 4 pixel cam AI - Machine Learning in Houdini Tutorial</description></item></channel></rss>